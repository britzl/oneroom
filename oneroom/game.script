local input = require "ludobits.m.input"
local flow = require "ludobits.m.flow"
local render_settings = require "render.settings"

local ZOOM = render_settings.ZOOM

local LEFT = hash("left")
local RIGHT = hash("right")
local UP = hash("up")
local DOWN = hash("down")
local FIRE = hash("fire")

local PLAYER_SPEED = 75


local WEAPONS = {
	{
		name = "AK-97",
		bullets_per_second = 10,
		bullet_speed = 200,
	},
}


local function change_weapon(self, index)
	self.weapon = WEAPONS[index]
	self.weapon_angle = 0
	self.bullet_interval = 1 / self.weapon.bullets_per_second
	label.set_text("hud#weapon", self.weapon.name)
end


local function spawn_enemy(self, type)
	local id = factory.create("#blobfactory", vmath.vector3(math.random(16,render_settings.WIDTH - 16), math.random(16,render_settings.HEIGHT - 16), 1))
end

local function spawn_bullet(self, position, type)
	local player_pos = go.get_world_position("player")
	factory.create("#bulletfactory", player_pos, self.weapon_angle, { speed = self.weapon.bullet_speed })
end

function init(self)
	math.randomseed(os.time())
	input.acquire()
	change_weapon(self, 1)

	self.game_loop = flow(function ()
		while true do
			spawn_enemy(self)
			flow.delay(3)
		end
	end)
end

function final(self)
	flow.stop(self.game_loop)
end

function update(self, dt)
	flow.update(dt)

	local player_pos = go.get_position("player")
	if input.is_pressed(LEFT) then
		player_pos.x = player_pos.x - PLAYER_SPEED * dt
		msg.post("player", "moving")
	elseif input.is_pressed(RIGHT) then
		player_pos.x = player_pos.x + PLAYER_SPEED * dt
		msg.post("player", "moving")
	end
	if input.is_pressed(UP) then
		player_pos.y = player_pos.y + PLAYER_SPEED * dt
		msg.post("player", "moving")
	elseif input.is_pressed(DOWN) then
		player_pos.y = player_pos.y - PLAYER_SPEED * dt
		msg.post("player", "moving")
	end
	if not input.is_pressed(LEFT) and not input.is_pressed(RIGHT) and not input.is_pressed(UP) and not input.is_pressed(DOWN) then
		msg.post("player", "idling")
	end
	
	if input.is_pressed(FIRE) then
		print("fire")
		local now = socket.gettime()
		if not self.last_bullet or (now - self.last_bullet) >= self.bullet_interval then
			print("spoaw")
			spawn_bullet(self)
			self.last_bullet = now
		end
	end
	go.set_position(player_pos, "player")
end
function on_message(self, message_id, message, sender)
	flow.on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
	input.update(action_id, action)
	if not action_id then
		local pos = go.get_world_position("player")
		local angle = -math.atan2((action.x / ZOOM) - pos.x, (action.y / ZOOM) - pos.y)
		self.weapon_angle = vmath.quat_rotation_z(angle)
		
		
		--go.set_position(pos + vmath.rotate(self.weapon_angle, vmath.vector3(0, 20, 0)), "crosshair")
	end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
