go.property("player_spawn", vmath.vector3())
go.property("enemy_spawn1", vmath.vector3())
go.property("enemy_spawn2", vmath.vector3())
go.property("enemy_spawn3", vmath.vector3())
go.property("enemy_spawn4", vmath.vector3())

local render_settings = require "render.settings"
local astar = require "utils.astar"
local floodfill = require "utils.floodfill"
local level = require "oneroom.level"

local TILE_SIZE = 16
local W = render_settings.WIDTH / TILE_SIZE
local H = render_settings.HEIGHT / TILE_SIZE

local FLOODFILL_INTERVAL = 0.5

local function fill(self, x, y)
	--local t = socket.gettime()
	floodfill.fill(x, y, self.level.layout)
	--print(socket.gettime() - t)
	--self.level.dumpcost()
end

local function generate(self)

	self.level = level.create(msg.url("."), W, H, TILE_SIZE)
	self.level.generate()
	
	self.player_spawn = self.level.create_spawn_position()
	self.enemy_spawn1 = self.level.create_spawn_position()
	self.enemy_spawn2 = self.level.create_spawn_position()
	self.enemy_spawn3 = self.level.create_spawn_position()
	self.enemy_spawn4 = self.level.create_spawn_position()

	go.set_position(self.enemy_spawn1, "spawnpoint1")
	go.set_position(self.enemy_spawn2, "spawnpoint2")
	go.set_position(self.enemy_spawn3, "spawnpoint3")
	go.set_position(self.enemy_spawn4, "spawnpoint4")

	for i=1,math.random(1, 4) do
		local x, y, pos = self.level.random_position()
		factory.create("#barrelfactory", pos)
	end
	
	fill(self, 1, 1)
end


function init(self)
	generate(self)
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("floodfill") then
		local x, y = self.level.vector3_to_xy(message.position)
		fill(self, x, y)
	elseif message_id == hash("destroy") then
		local x, y = self.level.vector3_to_xy(message.pos)
		self.level.destroy(x, y)
	elseif message_id == hash("generate") then
		generate(self)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
