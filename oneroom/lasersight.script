local flow = require "ludobits.m.flow"
local render_settings = require "render.settings"

go.property("target", vmath.vector3())
go.property("angle", vmath.quat())


local ZOOM = render_settings.ZOOM
local OFFSET = vmath.vector3(0, 4, 0)

local LENGTH = vmath.vector3(0, render_settings.WIDTH, 0)

local RAY_CAST_RESPONSE = hash("ray_cast_response")


local GROUPS = { hash("wall"), hash("enemy") }

function init(self)
end

function final(self)
end

function update(self, dt)
	local pos = go.get_world_position()
	local to = pos + vmath.rotate(self.angle, LENGTH)
	if vmath.length(pos - to) > 0 then
		physics.ray_cast(pos, to, GROUPS)
	end


--[[	local pos = go.get_world_position()
	local angle = -math.atan2(self.target.x - pos.x, self.target.y - pos.y)
	local quat = vmath.quat_rotation_z(angle)
	local distance = (vmath.length(pos - self.target))
	
	go.set_rotation(quat)
	go.set_scale(vmath.vector3(1, distance, 1))
	go.set_position(vmath.rotate(quat, OFFSET))--]]
end

function on_message(self, message_id, message, sender)
	if message_id == RAY_CAST_RESPONSE then
		go.set_rotation(self.angle)
		go.set_scale(vmath.vector3(1, LENGTH.y * message.fraction, 1))
	end
end

function on_input(self, action_id, action)
    -- Add input-handling code here
    -- Remove this function if not needed
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
