local render_settings = require "render.settings"
local explosions = require "oneroom.explosions"


go.property("speed", 200)
go.property("type", hash("bullet"))
go.property("enemy_bullet", false)
go.property("damage", 1)
go.property("distance", 500)
go.property("destroy_walls", false)
go.property("explosion", hash("explosion_small"))
go.property("particles", hash(""))


local ENEMY = hash("enemy")
local PLAYER = hash("player")
local WALL = hash("wall")
local COLLISION_RESPONSE = hash("collision_response")

local SMOKE_PARTICLES = hash("smoke")
local FLAME_PARTICLES = hash("flame")
local EMPTY_HASH = hash("")

function init(self)
	msg.post("#sprite", "play_animation", { id = self.type })
	if self.enemy_bullet then
		msg.post("#enemycollisionobject", "disable")
	else
		msg.post("#playercollisionobject", "disable")
	end
	
	msg.post("#smoke", "disable")
	msg.post("#flame", "disable")
	if self.particles == SMOKE_PARTICLES then
		msg.post("#smoke", "enable")
		particlefx.play("#smoke")
	elseif self.particles == FLAME_PARTICLES then
		msg.post("#flame", "enable")
		particlefx.play("#flame")
	end

	self.initial_position = go.get_position()
end

function final(self)
	msg.post("#smoke", "disable")
	msg.post("#flame", "disable")
end

function update(self, dt)
	local pos = go.get_position()
	local d = vmath.rotate(go.get_rotation(), vmath.vector3(0, 1, 0))
	pos = pos + d * self.speed * dt
	go.set_position(pos)
	local distance_traveled = vmath.length(pos - self.initial_position)
	if pos.x < -16 or pos.x > render_settings.WIDTH + 16 or pos.y < -16 or pos.y > render_settings.HEIGHT + 16 or distance_traveled > self.distance then
		go.delete()
		if self.explosion ~= EMPTY_HASH then
			explosions.create(go.get_world_position(), self.explosion)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == COLLISION_RESPONSE then
		if message.group == WALL then
			go.delete()
			if self.explosion ~= EMPTY_HASH then
				explosions.create(go.get_world_position(), self.explosion)
			end
			if self.destroy_walls then
				for x=-1,1 do
					for y=-1,1 do
						msg.post("level", "destroy", { pos = go.get_world_position() + vmath.vector3(16 * x, 16 * y, 0) })
					end
				end
			end
		elseif message.group == ENEMY or message.group == PLAYER then
			go.delete()
			if self.explosion ~= EMPTY_HASH then
				explosions.create(go.get_world_position(), self.explosion)
			end
		end
	end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
